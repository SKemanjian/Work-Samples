.data
a: .word 5
one: .word 1
array: .space 4

.text
main:	la $s0, a
	li $s1, 30
	li $s2, 75
	la $s3, array
	li $t0, 7
	sw $t0, 0($s3)
	add $t2, $s0, $s1
	add $t2, $t2, $s2
	la $t1, one
	add $t2, $t2, $t1
	addi $s3, $s3, 36
	sw $t2, 16($s3)
	sw $s0, 32($s3)
	sw $s2, 8($s2)
	move $a0, $s1
	move $a1, $s2
	addi $sp, $sp, -8
	sw $s1, 0($sp)
	sw $s2, 4($sp)
	jal delta
	lw $s1, 0($sp)
	lw $s2, 4($sp)
	addi $sp, $sp, 8
	move $s0, $v0
	addi $s0, $s0, 15
	la $t0, glob
	ble $s0, $zero, else
	addi $s0, $t0, 1
	
else:	addi $sp, $sp, -4
	sw $s1, 0($sp)
	jal factorial
	lw $s1, 0($sp)
	addi $sp, $sp, 4
	move $s2, $v0
	
for:	li $t0, 0
	li $t4, 4
	bge $t0, $t4, end
	addi $s0, $s0, 1
	add $t2, $s1, $s2
	addi $t0, $t0, 1
	
end:	addi $sp, $sp, -4
	sw $s0, 0($sp)
	move $a0, $s0
	jal multFunc
	lw $s0, 0($sp)
	addi $sp, $sp, 4
	move $t2, $v0
	li $v0, 10
	syscall
	
factorial:	addi $sp, $sp, -8
		sw $s0, 0($sp)
		sw $ra, 4($sp)
		li $t8, 1
		move $s0, $a0
		bge $a0, $t8, else2
		add $v0, $t8, $zero
		j exitFac
else2:		addi $a0, $s0, -1
		jal factorial
		mul $v0, $v0, $s0
exitFac:	lw $s0, 0($sp)
		lw $ra, 4($sp)
		addi $sp, $sp, 8
		jr $ra
	
